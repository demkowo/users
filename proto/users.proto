syntax = "proto3";

package users;

option go_package = "github.com/demkowo/users/internal/generated/proto";

import "google/protobuf/timestamp.proto";

message Club {
  string id   = 1;
  string name = 2;
}

message User {
  string id   = 1;
  string nickname = 2;
  string img      = 3;
  string country  = 4;
  string city     = 5;
  repeated Club clubs = 6;
  google.protobuf.Timestamp created = 7;
  google.protobuf.Timestamp updated = 8;
  bool deleted = 9;
}

message AddUserRequest {
  string nickname = 1;
  string img      = 2;
  string country  = 3;
  string city     = 4;
  repeated string clubs = 5;
}

message AddUserResponse {
  User user = 1;
}

message DeleteUserRequest {
  string user_id = 1;
}

message DeleteUserResponse {}

message FindUsersRequest {}

message FindUsersResponse {
  repeated User users = 1;
}

message GetAvatarByNicknameRequest {
  string nickname = 1;
}

message GetAvatarByNicknameResponse {
  string avatar = 1;
}

message GetByIdRequest {
  string user_id = 1;
}

message GetByIdResponse {
  User user = 1;
}

message ListUsersRequest {
  int32 limit  = 1;
  int32 offset = 2;
}

message ListUsersResponse {
  repeated User users = 1;
}

message UpdateUserRequest {
  string user_id = 1;
  string country  = 2;
  string city     = 3;
  repeated string clubs = 4;
}

message UpdateUserResponse {}

message UpdateImgRequest {
  string user_id = 1;
  string img     = 2;
}

message UpdateImgResponse {}

service Users {
  rpc Add                 (AddUserRequest)            returns (AddUserResponse);
  rpc Delete              (DeleteUserRequest)         returns (DeleteUserResponse);
  rpc Find                (FindUsersRequest)          returns (FindUsersResponse);
  rpc GetAvatarByNickname (GetAvatarByNicknameRequest)returns (GetAvatarByNicknameResponse);
  rpc GetById             (GetByIdRequest)            returns (GetByIdResponse);
  rpc List                (ListUsersRequest)          returns (ListUsersResponse);
  rpc Update              (UpdateUserRequest)         returns (UpdateUserResponse);
  rpc UpdateImg           (UpdateImgRequest)          returns (UpdateImgResponse);
}
